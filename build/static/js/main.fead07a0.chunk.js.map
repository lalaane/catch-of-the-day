{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.fead07a0.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n\tmyInput = React.createRef();\r\n\r\n\tstatic propTypes = {\r\n\t\thistory: PropTypes.object,\r\n\t};\r\n\r\n\tgoToStore = event => {\r\n\t\t// stop the form from submitting\r\n\t\tevent.preventDefault();\r\n\t\t// get the text from that input\r\n\t\tconst storeName = this.myInput.current.value;\r\n\t\t// Change the page to /store/user-input\r\n\t\tthis.props.history.push(`/store/${storeName}`);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<form className='store-selector' onSubmit={this.goToStore}>\r\n\t\t\t\t\t<h2>Please Enter A Store Name</h2>\r\n\t\t\t\t\t<input type='text' ref={this.myInput} required placeholder='Store Name' defaultValue={getFunName()} />\r\n\t\t\t\t\t<button type='submit'>Visit Store</button>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//stateless functional component with es6 =>function and implicit return\r\nconst Header = props => (\r\n\t<header className='top'>\r\n\t\t<h1>\r\n\t\t\tCatch\r\n\t\t\t<span className='ofThe'>\r\n\t\t\t\t<span className='of'>of</span>\r\n\t\t\t\t<span className='The'>The</span>\r\n\t\t\t</span>\r\n\t\t\tDay\r\n\t\t</h1>\r\n\t\t<h3 className='tagline'>\r\n\t\t\t<span>{props.tagline}</span>\r\n\t\t</h3>\r\n\t</header>\r\n);\r\n\r\nHeader.propTypes = {\r\n\ttagline: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tfishes: PropTypes.object,\r\n\t\torder: PropTypes.object,\r\n\t\tremoveFromOrder: PropTypes.func,\r\n\t};\r\n\r\n\trenderOrder = key => {\r\n\t\tconst fish = this.props.fishes[key];\r\n\t\tconst count = this.props.order[key];\r\n\t\tconst isAvailable = fish && fish.status === 'available';\r\n\t\tconst transitionOptions = {\r\n\t\t\tclassNames: 'order',\r\n\t\t\tkey,\r\n\t\t\ttimeout: { enter: 500, exit: 500 },\r\n\t\t};\r\n\t\t// make sure the fish is loaded before continuing\r\n\t\tif (!fish) return null;\r\n\t\tif (!isAvailable) {\r\n\t\t\treturn (\r\n\t\t\t\t<CSSTransition {...transitionOptions}>\r\n\t\t\t\t\t<li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>;\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<CSSTransition {...transitionOptions}>\r\n\t\t\t\t<li key={key}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<TransitionGroup component='span' className='count'>\r\n\t\t\t\t\t\t\t<CSSTransition classNames='count' key={count} timeout={{ enter: 500, exit: 500 }}>\r\n\t\t\t\t\t\t\t\t<span>{count}</span>\r\n\t\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\t</TransitionGroup>\r\n\t\t\t\t\t\tlbs {fish.name}\r\n\t\t\t\t\t\t{formatPrice(count * fish.price)}\r\n\t\t\t\t\t\t<button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</li>\r\n\t\t\t</CSSTransition>\r\n\t\t);\r\n\t};\r\n\trender() {\r\n\t\tconst orderIds = Object.keys(this.props.order);\r\n\t\tconst total = orderIds.reduce((prevTotal, key) => {\r\n\t\t\tconst fish = this.props.fishes[key];\r\n\t\t\tconst count = this.props.order[key];\r\n\t\t\tconst isAvailable = fish && fish.status === 'available';\r\n\t\t\tif (isAvailable) {\r\n\t\t\t\treturn prevTotal + count * fish.price;\r\n\t\t\t}\r\n\t\t\treturn prevTotal;\r\n\t\t}, 0);\r\n\t\treturn (\r\n\t\t\t<div className='order-wrap'>\r\n\t\t\t\t<h2>Order</h2>\r\n\t\t\t\t<TransitionGroup component='ul' className='order'>\r\n\t\t\t\t\t{orderIds.map(this.renderOrder)}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t\t<div className='total'>\r\n\t\t\t\t\tTotal:\r\n\t\t\t\t\t<strong>{formatPrice(total)}</strong>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n\tnameRef = React.createRef();\r\n\tpriceRef = React.createRef();\r\n\tstatusRef = React.createRef();\r\n\tdescRef = React.createRef();\r\n\timageRef = React.createRef();\r\n\r\n\tstatic propTypes = {\r\n\t\taddFish: PropTypes.func,\r\n\t};\r\n\r\n\tcreateFish = event => {\r\n\t\t// stop the form from submiting\r\n\t\tevent.preventDefault();\r\n\t\tconst fish = {\r\n\t\t\tname: this.nameRef.current.value,\r\n\t\t\tprice: parseFloat(this.priceRef.current.value),\r\n\t\t\tstatus: this.statusRef.current.value,\r\n\t\t\tdesc: this.descRef.current.value,\r\n\t\t\timage: this.imageRef.current.value,\r\n\t\t};\r\n\t\tthis.props.addFish(fish);\r\n\t\t// refresh the form\r\n\t\tevent.currentTarget.reset();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className='fish-edit' onSubmit={this.createFish}>\r\n\t\t\t\t\t<input name='name' ref={this.nameRef} type='text' placeholder='Name' />\r\n\t\t\t\t\t<input name='price' ref={this.priceRef} type='text' placeholder='Price' />\r\n\t\t\t\t\t<select name='status' ref={this.statusRef}>\r\n\t\t\t\t\t\t<option value='available'>Fresh!</option>\r\n\t\t\t\t\t\t<option value='unavailable'>Sold Out!</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<textarea name='desc' ref={this.descRef} placeholder='Desc'></textarea>\r\n\t\t\t\t\t<input name='image' ref={this.imageRef} type='text' placeholder='Image' />\r\n\t\t\t\t\t<button type='submit'>+ add fish</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tfish: PropTypes.shape({\r\n\t\t\timage: PropTypes.string,\r\n\t\t\tname: PropTypes.string,\r\n\t\t\tdesc: PropTypes.string,\r\n\t\t\tstatus: PropTypes.string,\r\n\t\t\tprice: PropTypes.number,\r\n\t\t}),\r\n\t\tupdateFish: PropTypes.func,\r\n\t\tindex: PropTypes.string,\r\n\t\tdeleteFish: PropTypes.func,\r\n\t};\r\n\r\n\thandleChange = event => {\r\n\t\tconsole.log(event.currentTarget.value);\r\n\t\t//update that fish\r\n\t\t// 1. take a copy of the current fish\r\n\t\tconst updatedFish = {\r\n\t\t\t...this.props.fish,\r\n\t\t\t// overwrite the one thing that changed\r\n\t\t\t[event.currentTarget.name]: event.currentTarget.value,\r\n\t\t};\r\n\t\tthis.props.updateFish(this.props.index, updatedFish);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='fish-edit'>\r\n\t\t\t\t<input type='text' name='name' onChange={this.handleChange} value={this.props.fish.name} />\r\n\t\t\t\t<input type='text' name='price' onChange={this.handleChange} value={this.props.fish.price} />\r\n\t\t\t\t<select type='text' name='status' onChange={this.handleChange} value={this.props.fish.status}>\r\n\t\t\t\t\t<option value='available'>Fresh!</option>\r\n\t\t\t\t\t<option value='unavailable'>Sold Out!</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<textarea name='desc' onChange={this.handleChange} value={this.props.fish.desc} />\r\n\t\t\t\t<input type='text' name='image' onChange={this.handleChange} value={this.props.fish.image} />\r\n\t\t\t\t<button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = props => (\r\n\t<nav className='login'>\r\n\t\t<h2>Inventory Login</h2>\r\n\t\t<p>Sign in to manage your store's inventory.</p>\r\n\t\t<button className='github' onClick={() => props.authenticate('Github')}>\r\n\t\t\tLog in with Github\r\n\t\t</button>\r\n\t\t<button className='facebook' onClick={() => props.authenticate('Facebook')}>\r\n\t\t\tLog in with Facebook\r\n\t\t</button>\r\n\t\t<button className='twitter' onClick={() => props.authenticate('Twitter')}>\r\n\t\t\tLog in with Twitter\r\n\t\t</button>\r\n\t</nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n\tauthenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n\tapiKey: 'AIzaSyCXw5Bmhb4KGO0Qj7n0tmlyMRbgcrOz-eM',\r\n\tauthDomain: 'catch-of-the-day-lalaane.firebaseapp.com',\r\n\tdatabaseURL: 'https://catch-of-the-day-lalaane-default-rtdb.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// named export\r\nexport { firebaseApp };\r\n\r\n// default export\r\nexport default base;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tfishes: PropTypes.object,\r\n\t\tupdateFish: PropTypes.func,\r\n\t\tdeleteFish: PropTypes.func,\r\n\t\tloadSampleFishes: PropTypes.func,\r\n\t};\r\n\r\n\tstate = {\r\n\t\tuid: null,\r\n\t\towner: null,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tfirebase.auth().onAuthStateChanged(user => {\r\n\t\t\tif (user) {\r\n\t\t\t\tthis.authHandler({ user });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tauthHandler = async authData => {\r\n\t\t// 1. look up the current store in the firebase db\r\n\t\tconst store = await base.fetch(this.props.storeId, { context: this });\r\n\t\t// 2. claim if there isn't an owner of the store\r\n\t\tif (!store.owner) {\r\n\t\t\t// save it as our own\r\n\t\t\tawait base.post(`${this.props.storeId}/owner`, {\r\n\t\t\t\tdata: authData.user.uid,\r\n\t\t\t});\r\n\t\t}\r\n\t\t// 3. set the state of the inventory component to reflect the current user\r\n\t\tthis.setState({\r\n\t\t\tuid: authData.user.uid,\r\n\t\t\towner: store.owner || authData.user.uid,\r\n\t\t});\r\n\r\n\t\tconsole.log(store);\r\n\t};\r\n\r\n\tauthenticate = provider => {\r\n\t\tconst authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n\t\tfirebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n\t};\r\n\r\n\tlogout = async () => {\r\n\t\tconsole.log('logging out');\r\n\t\tawait firebase.auth().signOut();\r\n\t\tthis.setState({ uid: null });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst logout = <button onClick={this.logout}>Log Out!</button>;\r\n\t\t// check if they are loged in\r\n\t\tif (!this.state.uid) {\r\n\t\t\treturn <Login authenticate={this.authenticate} />;\r\n\t\t}\r\n\t\t// check if they are not the owner of the store\r\n\t\tif (this.state.uid !== this.state.owner) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Very sori, you are not the owner!</p>\r\n\t\t\t\t\t{logout}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t// They must be the owner, render the inventory\r\n\t\treturn (\r\n\t\t\t<div className='inventory'>\r\n\t\t\t\t<h2>Inventoryy!</h2>\r\n\t\t\t\t{logout}\r\n\t\t\t\t{Object.keys(this.props.fishes).map(key => (\r\n\t\t\t\t\t<EditFishForm\r\n\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\tindex={key}\r\n\t\t\t\t\t\tfish={this.props.fishes[key]}\r\n\t\t\t\t\t\tupdateFish={this.props.updateFish}\r\n\t\t\t\t\t\tdeleteFish={this.props.deleteFish}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<AddFishForm addFish={this.props.addFish} />\r\n\t\t\t\t<button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tdetails: PropTypes.shape({\r\n\t\t\timage: PropTypes.string,\r\n\t\t\tname: PropTypes.string,\r\n\t\t\tdesc: PropTypes.string,\r\n\t\t\tstatus: PropTypes.string,\r\n\t\t\tprice: PropTypes.number,\r\n\t\t}),\r\n\t\taddToOrder: PropTypes.func,\r\n\t};\r\n\thandleClick = () => {\r\n\t\tthis.props.addToOrder(this.props.index);\r\n\t};\r\n\trender() {\r\n\t\tconst { image, name, price, desc, status } = this.props.details;\r\n\t\tconst isAvailable = status === 'available';\r\n\t\treturn (\r\n\t\t\t<li className='menu-fish'>\r\n\t\t\t\t<img src={image} alt={name} />\r\n\t\t\t\t<h3 className='fish-name'>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t\t<span className='price'>{formatPrice(price)}</span>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<p>{desc}</p>\r\n\t\t\t\t<button disabled={!isAvailable} onClick={this.handleClick}>\r\n\t\t\t\t\t{isAvailable ? 'Add to Order' : 'Sold out'}\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Fish;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tfishes: {},\r\n\t\torder: {},\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tmatch: PropTypes.object,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { params } = this.props.match;\r\n\t\t// first reinstate oru localStorage\r\n\t\tconst localStorageRef = localStorage.getItem(params.storeId);\r\n\t\tif (localStorageRef) {\r\n\t\t\tthis.setState({ order: JSON.parse(localStorageRef) });\r\n\t\t}\r\n\t\t//reference to the piece of data in the db\r\n\t\tthis.ref = base.syncState(`${params.storeId}/fishes`, {\r\n\t\t\tcontext: this,\r\n\t\t\tstate: 'fishes',\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tlocalStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n\t}\r\n\r\n\t// cleaning up\r\n\tcomponentWillUnmount() {\r\n\t\tbase.removeBinding(this.ref);\r\n\t}\r\n\r\n\taddFish = fish => {\r\n\t\t// take a copy of the existing state\r\n\t\tconst fishes = { ...this.state.fishes };\r\n\t\t// add our new fish to fishes variable\r\n\t\tfishes[`fish${Date.now()}`] = fish;\r\n\t\t// set the new fishes obj to state\r\n\t\tthis.setState({ fishes });\r\n\t};\r\n\tloadSampleFishes = () => {\r\n\t\tthis.setState({ fishes: sampleFishes });\r\n\t};\r\n\r\n\tupdateFish = (key, updatedFish) => {\r\n\t\t// take a copy of the current state\r\n\t\tconst fishes = { ...this.state.fishes };\r\n\t\t// update that state\r\n\t\tfishes[key] = updatedFish;\r\n\t\t// set that to state\r\n\t\tthis.setState({ fishes });\r\n\t};\r\n\r\n\tdeleteFish = key => {\r\n\t\t// take a copy of state\r\n\t\tconst fishes = { ...this.state.fishes };\r\n\t\t// update the state (remove a fish)\r\n\t\tfishes[key] = null;\r\n\t\t// update state\r\n\t\tthis.setState({ fishes });\r\n\t};\r\n\r\n\taddToOrder = key => {\r\n\t\t// copy of state\r\n\t\tconst order = { ...this.state.order };\r\n\t\t// either add to the order, or update the number in our order\r\n\t\torder[key] = order[key] + 1 || 1;\r\n\t\t// call setState to update state obj\r\n\t\tthis.setState({ order });\r\n\t};\r\n\r\n\tremoveFromOrder = key => {\r\n\t\tconst order = { ...this.state.order };\r\n\t\tdelete order[key];\r\n\t\tthis.setState({ order });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='catch-of-the-day'>\r\n\t\t\t\t<div className='menu'>\r\n\t\t\t\t\t<Header tagline='Fresh seafood market' />\r\n\t\t\t\t\t<ul className='fishes'>\r\n\t\t\t\t\t\t{Object.keys(this.state.fishes).map(key => (\r\n\t\t\t\t\t\t\t<Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\r\n\t\t\t\t<Inventory\r\n\t\t\t\t\taddFish={this.addFish}\r\n\t\t\t\t\tupdateFish={this.updateFish}\r\n\t\t\t\t\tdeleteFish={this.deleteFish}\r\n\t\t\t\t\tloadSampleFishes={this.loadSampleFishes}\r\n\t\t\t\t\tfishes={this.state.fishes}\r\n\t\t\t\t\tstoreId={this.props.match.params.storeId}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n\t<div>\r\n\t\t<h2>Not Found!!???!!!</h2>\r\n\t</div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n\t<BrowserRouter>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path='/' component={StorePicker} />\r\n\t\t\t<Route path='/store/:storeId' component={App} />\r\n\t\t\t<Route component={NotFound} />\r\n\t\t</Switch>\r\n\t</BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}